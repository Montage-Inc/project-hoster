hoster:
  build: ./hoster
  ports:
    - "8000"
    - "8100"
  links:
    - ipfs
  volumes:
    - ./hoster/src:/opt/app/src
  environment:
    IPFS_API_URL: "http://ipfs:5001"
    IPFS_GATEWAY_URL: "http://ipfs:8080"
    LANDING_URL: "https://example.com"
    REDIRECT_PROTOCOL: "http"
    DOMAIN_NAME: "hosted.com"
publisher:
  build: ./publisher
  ports:
    - "8000"
  links:
    - ipfs
    - hoster
    - postgresql
  volumes:
    - ./publisher/src:/opt/app/src
  environment:
    IPFS_API_URL: "http://ipfs:5001"
    HOSTER_RPC_URL: "http://hoster:8100"
    SECRET: "foo"
    PURGE_TOKEN: "foo"
    DATABASE_URL: "postgres://user:pass@postgresql:5432/dbname"
  command: ./run.sh
cacher:
  build: ./cacher
  ports:
    - "80:80"
  links:
    - hoster
  environment:
    PURGE_TOKEN: "foo"
ipfs:
  image: ipfs/go-ipfs
  #build: https://github.com/ipfs/go-ipfs.git
  ports:
    - "4001"
    - "4002/udp"
    - "5001"
    - "8080"
  #volumes:
  #  - ./ipfs-data:/data/ipfs
tests:
  build: ./tests
  environment:
    SECRET: "foo"
    DOMAIN_NAME: "hosted.com"
  volumes:
    - ./tests/src:/opt/app/src
  links:
    - cacher
    - ipfs
    - hoster
    - publisher
postgresql:
  image: postgres
  environment:
    POSTGRES_USER: user
    POSTGRES_PASSWORD: pass
    POSTGRES_DB: dbname
